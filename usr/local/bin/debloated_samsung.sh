#!/usr/bin/env bash
#
# Autor:       Fernando Souza - https://www.youtube.com/@fernandosuporte/
# Colabora√ß√£o: Slackjeff      - https://github.com/slackjeff/
# Data:        04/08/2025 as 14:38:36
# Homepage:    https://github.com/tuxslack/debloated_Samsung
# Licen√ßa:     MIT
#
#
###########################################################################
#
# Adjust for Linux Distribuitions.
#
# THKS! Fork: https://github.com/invinciblevenom/debloat_samsung_android
#
###########################################################################


clear

# ----------------------------------------------------------------------------------------

# Uso de cores para destacar

RED='\033[1;31m'
GREEN='\033[1;32m'
YELLOW='\033[1;33m'
RESET='\033[0m'

# ----------------------------------------------------------------------------------------

# Captura Ctrl+C e exibe mensagem amig√°vel

# Ela captura o sinal SIGINT, que √© enviado quando o usu√°rio pressiona Ctrl+C, e executa 
# o trecho entre aspas:

trap 'echo -e "\n${YELLOW}Saindo...${RESET}"; exit 0' SIGINT

# Assim, o script encerra de forma controlada, com uma mensagem limpa em vez de um 
# encerramento abrupto.

# ----------------------------------------------------------------------------------------

rm -Rf /tmp/debloat_*.log

# Habilita log de sa√≠da para arquivo

LOGFILE="debloat_$(date +%F_%H%M%S).log"

exec > >(tee -a "/tmp/$LOGFILE") 2>&1

# Exibe onde o log est√° sendo salvo

echo -e "\n\nüìÑ Log ser√° salvo em: ${GREEN}/tmp/$LOGFILE \n${RESET}"


# ----------------------------------------------------------------------------------------

######## Functions

# Mensagem de erro

function DIE() {

    echo -e "${RED}\nERRO: $* \n ${RESET}" >&2
    
    exit 1
}

# Obs: A defini√ß√£o da fun√ß√£o DIE deve esta sempre no in√≠cio do script, antes de qualquer chamada a ela.

# ----------------------------------------------------------------------------------------


# Detecta vers√£o do Android via ADB

android_version=$(adb shell getprop ro.build.version.release | tr -d '\r')

echo -e "\nVers√£o do Android detectada: $android_version\n"


# Extrai a parte principal da vers√£o (antes do primeiro ponto) Ex: 5 de 5.1.1.

android_major_version=${android_version%%.*}


# Verifica se √© uma vers√£o num√©rica v√°lida

if [[ "$android_major_version" =~ ^[0-9]+$ ]]; then

    # Garante que a compara√ß√£o seja num√©rica.

    if (( android_major_version < 6 )); then

        echo -e "${RED}‚ö†Ô∏è  ATEN√á√ÉO: Esta √© a vers√£o Android ${android_version}. ${RESET}"
        echo -e "${RED}O comando 'cmd' N√ÉO est√° dispon√≠vel nessa vers√£o. ${RESET}"
        echo -e "${RED}Comandos como 'cmd package install-existing' N√ÉO funcionar√£o. ${RESET}\n"

    else

        echo -e "${GREEN}‚úîÔ∏è  Android ${android_version} detectado. O comando 'cmd' est√° dispon√≠vel. ${RESET}\n"

    fi


else

    clear

    echo -e "\n${RED}Erro: n√£o foi poss√≠vel determinar corretamente a vers√£o do Android. ${RESET} \n"

    exit 1

fi


# ----------------------------------------------------------------------------------------


echo -e "${GREEN}Tudo pronto para come√ßar! ${RESET} \n"

echo -e "${RED}‚ö†Ô∏è Use por sua conta e risco! ${RESET}"


echo -e "${RED}
=== Iniciando desbloat de apps legados Samsung ===

Para remover bloatware de aparelhos Samsung com Android 

‚ö†Ô∏è ATEN√á√ÉO

    Isso n√£o desinstala completamente os apps, apenas os desativa/removes para o usu√°rio atual (pm uninstall --user 0).

    Alguns apps s√£o importantes para funcionalidades b√°sicas. Use com cuidado.

    Este script deve ser executado com o dispositivo conectado via USB, com a depura√ß√£o USB ativada e com o ADB configurado no seu sistema.
    

    √â necess√°rio ter o adb (android-tools) instalado em sua distribui√ß√£o Linux.

    Op√ß√£o do desenvolvedor [HABILITADO em seu celular]



üîÅ Reverter mudan√ßas?

Use:

adb shell cmd package install-existing com.nome.do.pacote


‚ö†Ô∏è  Cuidados:

    Remo√ß√£o com root pode invalidar a garantia.

    Modificar arquivos de sistema pode causar bootloop se feito incorretamente.

    Recomenda-se backup completo antes.


Enter para continuar...

${RESET}"

read pausa

clear

# ----------------------------------------------------------------------------------------

######## Check

if ! which adb 1>/dev/null 2>/dev/null; then

    echo -e "${RED}\nErro. Instale o adb (android-tools).\n ${RESET}"
    
    exit 1
    
else

# ----------------------------------------------------------------------------------------

 # Verificar permiss√£o do ADB

 # Antes de qualquer a√ß√£o com o ADB, adicione:

 adb devices | grep -q "unauthorized" && \
  DIE "Dispositivo n√£o autorizado. Autorize o dispositivo na tela do seu celular."
  
# ----------------------------------------------------------------------------------------

  
    # Start server.
    
    adb start-server
    
fi

# ----------------------------------------------------------------------------------------

# üìÅ Organiza√ß√£o de Arquivos

# Checar exist√™ncia da pasta conf/

# Antes de qualquer fun√ß√£o:

[[ -d "/etc/debloated_Samsung/" ]] || { DIE "Pasta '/etc/debloated_Samsung/' n√£o encontrada." && exit ; } 

# ----------------------------------------------------------------------------------------

    echo -e "\n+---------------------------------------------+"

    echo -e "${GREEN}\nChecando os dispositivos conectados...\n ${RESET}"

# Check if have devices.

output=$(adb devices | tail -n +2)

if [[ -z "$output" ]]; then

    echo -e "${RED}\nN√£o encontrei nenhum dispositivo. Plugue seu celular no computador. \n ${RESET}"
    
    echo -e "+---------------------------------------------+ \n"
    
    sleep 30

    exit 1
fi

output=${output//device}

echo -e "${GREEN}\nDispositivos ----> $output \n ${RESET}"

echo -e "\n+---------------------------------------------+\n"

# ----------------------------------------------------------------------------------------

# Para listar todos os pacotes instalados:

lista(){

    echo -e "${YELLOW}\nPacotes instalados atualmente: \n${RESET}"

    adb shell pm list packages

    echo -e "\n# -------------------------------------------------------------------------\n"

}

# Ex:

# package:br.com.mobicare.samsung.recarga

# package:com.google.android.music

# package:br.org.sidi.aplicacoesbrasil.widget

# package:com.rsupport.rs.activity.rsupport.aas2


# Depois de encontrar o nome do pacote, use o comando para remove:


# App recarga

# $ adb shell pm uninstall --user 0  br.com.mobicare.samsung.recarga
# Success


# Google Play M√∫sica (nome do pacote: com.google.android.music) era o servi√ßo oficial de 
# streaming de m√∫sica do Google, descontinuado em 2020 e substitu√≠do pelo YouTube Music.

# $ adb shell pm uninstall --user 0  com.google.android.music
# Success


# O app Destaques, vers√£o 04.02.17, √© um widget da Samsung.

# Este aplicativo **n√£o √© um app de sistema essencial**, sendo desenvolvido pela 
# Samsung Eletr√¥nica da Amaz√¥nia Ltda para exibir **sugest√µes de apps, promo√ß√µes e 
# not√≠cias** via widget.


# $ adb shell pm uninstall --user 0 br.org.sidi.aplicacoesbrasil.widget
# Success


# Apps Clube

# O pacote **br.com.bemobi.appsclub.samsung** corresponde ao app AppsClub, uma loja 
# alternativa de aplicativos, desenvolvida pela empresa Bemobi, e muitas vezes 
# pr√©-instalada em celulares Samsung vendidos por operadoras (especialmente no Brasil).

# $ adb shell pm list packages | grep -i club
# package:br.com.bemobi.appsclub.samsung


# $ adb shell pm uninstall --user 0 br.com.bemobi.appsclub.samsung
# Success



# Smart Tutor

# O app Smart Tutor, vers√£o 1.5 (por exemplo build 408), √© um servi√ßo oficial da Samsung 
# que permite a assist√™ncia remota por agentes de suporte da Samsung. Ele √© frequentemente 
# instalado automaticamente via o menu de configura√ß√µes "Remote Support" em dispositivos 
# Samsung com Android 11 ou One UI 4


# $ adb shell pm uninstall --user 0 com.rsupport.rs.activity.rsupport.aas2
# Success


# O que √© e como funciona

# Permite que um agente da Samsung acesse seu dispositivo remotamente para diagn√≥sticos, 
# ajustes de configura√ß√µes ou suporte t√©cnico ‚Äî sempre com sua permiss√£o expressa

# Funciona como um "TeamViewer", mas restrito a suporte Samsung, com acesso limitado a 
# dados sens√≠veis

# Muitos usu√°rios relatam que o app aparece automaticamente, especialmente ap√≥s desinstalar 
# o app "Tips" da Samsung, ou em certas regi√µes, sem possibilidade de impedir a instala√ß√£o 
# via interface Android

# V√°rios usu√°rios confirmam que a remo√ß√£o diminui notifica√ß√µes e consumo de recursos, 
# melhorando dura√ß√£o de bateria e desempenho.

# ----------------------------------------------------------------------------------------

# Ajustes Iniciais

function TWEAKS(){

    local conf_path="/etc/debloated_Samsung/tweaks.conf"
    local conf_fullpath="${conf_path}"
    local command

    # Verificando se o arquivo "$conf_fullpath" existe
    
    [[ -e "$conf_fullpath" ]] ||
        DIE "O arquivo de configura√ß√£o $conf_fullpath n√£o foi encontrado."

    echo -e "${GREEN}\n++++++++ Melhore a Bateria, Performance e desative os Apps GOS. \n ${RESET}"
    
    sleep 1s
    
    while read -r command; do
    
            echo -e "${GREEN}\n[ADB] Executando: uninstall $command \n ${RESET}"
            
            adb shell -n settings put global "$command"
            
    done < "$conf_fullpath"


    echo -e "${GREEN}\nFun√ß√£o 'Ajustes Iniciais' finalizado com √™xito. \n ${RESET}"

}

# ----------------------------------------------------------------------------------------

# Limpeza B√°sica

function BASIC() {

    local conf_path="/etc/debloated_Samsung/basic.conf"
    local conf_fullpath="${conf_path}"
    local command

    # Verificando se o arquivo "$conf_fullpath" existe
    
    [[ -e "$conf_fullpath" ]] ||
        DIE "O arquivo de configura√ß√£o $conf_fullpath n√£o foi encontrado."

    echo -e "${GREEN}\n+++++++++++++++ Limpeza B√°sica \n ${RESET}"
    
    sleep 1s
    
    while read -r command; do
    
        # Ignora linhas que come√ßam com # ou cont√™m a palavra 'others'
        
        echo -e "${GREEN}\n[ADB] Executando: uninstall $command \n ${RESET}"
        
        adb shell -n pm uninstall --user 0 "$command"
        
    done < "$conf_fullpath"

# ----------------------------------------------------------------------------------------

    local conf_path="/etc/debloated_Samsung/samsung.conf"
    local conf_fullpath="${conf_path}"
    local command


    # Verificando se o arquivo "$conf_fullpath" existe
    
    [[ -e "$conf_fullpath" ]] ||
        DIE "O arquivo de configura√ß√£o $conf_fullpath n√£o foi encontrado."

    echo -e "${GREEN}\n+++++++++++++++ Limpeza de Apps legados da Samsung e de operadoras \n ${RESET}"
    
    sleep 1s


    # Tratar arquivos de configura√ß√£o com coment√°rios.

    while read -r command; do
    
        # Ignorar coment√°rios e linhas vazias nos .conf.
        # Reativa nas leituras dos arquivos .conf.
        
        # [[ "$command" =~ ^#.*$ || -z "$command" ]] && continue
        
         
        echo -e "${GREEN}\nDesinstalando: $command \n ${RESET}"
        
        echo -e "${GREEN}\n[ADB] Executando: uninstall $command \n ${RESET}"
        
        adb shell -n pm uninstall --user 0 "$command"
        
    done < "$conf_fullpath"  

# ----------------------------------------------------------------------------------------

     echo -e "${GREEN}\nFun√ß√£o 'Limpeza B√°sica' finalizado com √™xito.  \n ${RESET}"

     echo -e "${RED}\n=== Fim do processo. Reinicie o aparelho para aplicar ===\n ${RESET}"

}

# ----------------------------------------------------------------------------------------

# Limpeza Moderada

function LIGHT() {

    local conf_path="/etc/debloated_Samsung/light.conf"
    local conf_fullpath="${conf_path}"
    local command

    # Verificando se o arquivo "$conf_fullpath" existe
    
    [[ -e "$conf_fullpath" ]] ||
        DIE "O arquivo de configura√ß√£o $conf_fullpath n√£o foi encontrado."

    echo -e "${GREEN}\n+++++++++++++++ Limpeza Moderada \n ${RESET}"
    
    sleep 1s
    
    while read -r command; do
    
        # Ignora linhas que come√ßam com # ou cont√™m a palavra 'others'
        
        echo -e "${GREEN}\n[ADB] Executando: uninstall $command \n ${RESET}"
        
        adb shell -n pm uninstall --user 0 "$command"
        
    done < "$conf_fullpath"


    echo -e "${GREEN}\nFun√ß√£o 'Limpeza Moderada' finalizado com √™xito. \n ${RESET}"

    # echo -e "\n${GREEN}Desbloat finalizado com sucesso.${RESET}"
    echo -e "Considere reiniciar o dispositivo.\n"
}

# ----------------------------------------------------------------------------------------

# Limpeza Pesada

function HEAVY() {

    local conf_path="/etc/debloated_Samsung/heavy.conf"
    local conf_fullpath="${conf_path}"
    local command

    # Verificando se o arquivo "$conf_fullpath" existe
    
    [[ -e "$conf_fullpath" ]] ||
        DIE "O arquivo de configura√ß√£o $conf_fullpath n√£o foi encontrado."

# ----------------------------------------------------------------------------------------

# Confirmar antes de "HEAVY"

clear

echo -e "\n\n"

read -r -p "Voc√™ tem certeza que quer aplicar a limpeza pesada? [a√ß√£o √© irrevers√≠vel] (s/N): " confirm

[[ "$confirm" =~ ^[sS]$ ]] || { clear && exit 1 ; }


# ----------------------------------------------------------------------------------------

    echo -e "${YELLOW}\n+++ Iniciando Limpeza Pesada +++ \n${RESET}"
    
    # echo -e "${GREEN}\n+++++++++++++++ Limpeza Pesada \n ${RESET}"
    
    sleep 1s

    
    while read -r command; do

        # Ignora linhas que come√ßam com # ou cont√™m a palavra 'others'

        # Reativa nas leituras dos arquivos .conf.
                
        # [[ "$command" =~ ^#.*$ || -z "$command" ]] && continue

              
        echo -e "${GREEN}\n[ADB] Executando: uninstall $command \n ${RESET}"
        
        adb shell -n pm uninstall --user 0 "$command"
        
    done < "$conf_fullpath"

    echo -e "${GREEN}\n[ADB] Executando: install-existing com.sec.android.soagent \n ${RESET}"
    
    adb shell cmd package install-existing com.sec.android.soagent

    echo -e "${GREEN}\n[ADB] Executando: install-existing com.sec.android.systemupdate \n ${RESET}"
    
    adb shell cmd package install-existing com.sec.android.systemupdate


echo "
# O erro  /system/bin/sh: cmd: not found ‚Äî significa que o bin√°rio cmd n√£o est√° dispon√≠vel 
# no shell do Android 5.0 (Lollipop). Esse bin√°rio (cmd) foi introduzido a partir do 
# Android 6.0 (Marshmallow), portanto n√£o existe no Android 5.

# /system/bin/sh: cmd: not found

" 

    echo -e "\n${GREEN}Limpeza pesada finalizada com √™xito.${RESET}\n"
    
    # echo -e "${GREEN}\nFun√ß√£o 'Limpeza Pesada' finalizado com √™xito. \n ${RESET}"

    # echo -e "\n${GREEN}Desbloat finalizado com sucesso.${RESET}"
    echo -e "Considere reiniciar o dispositivo.\n"
}

# ----------------------------------------------------------------------------------------

########## Main



while true; do

clear


# Para listar todos os pacotes instalados:

lista


cat <<EOF


‚ñó‚ñÑ‚ñÑ‚ñÑ  ‚ñó‚ñû‚ñÄ‚ñö‚ññ‚ñó‚ññ   ‚ñà  ‚ñÑ‚ñÑ‚ñÑ  ‚ñó‚ñû‚ñÄ‚ñú‚ñå   ‚ñ†  ‚ñó‚ñû‚ñÄ‚ñö‚ññ   ‚ñê‚ñå     ‚ñó‚ñÑ‚ñÑ‚ññ‚ñó‚ñû‚ñÄ‚ñú‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñÑ   ‚ñÑ‚ñÑ‚ñÑ ‚ñà  ‚ñê‚ñå‚ñÑ‚ñÑ‚ñÑ‚ñÑ
‚ñê‚ñå  ‚ñà ‚ñê‚ñõ‚ñÄ‚ñÄ‚ñò‚ñê‚ñå   ‚ñà ‚ñà   ‚ñà ‚ñù‚ñö‚ñÑ‚ñü‚ñå‚ñó‚ñÑ‚ñü‚ñô‚ñÑ‚ññ‚ñê‚ñõ‚ñÄ‚ñÄ‚ñò   ‚ñê‚ñå    ‚ñê‚ñå   ‚ñù‚ñö‚ñÑ‚ñü‚ñå‚ñà ‚ñà ‚ñà ‚ñÄ‚ñÑ‚ñÑ  ‚ñÄ‚ñÑ‚ñÑ‚ñû‚ñò‚ñà   ‚ñà
‚ñê‚ñå  ‚ñà ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ‚ñê‚ñõ‚ñÄ‚ñö‚ññ‚ñà ‚ñÄ‚ñÑ‚ñÑ‚ñÑ‚ñÄ        ‚ñê‚ñå  ‚ñù‚ñö‚ñÑ‚ñÑ‚ññ‚ñó‚ñû‚ñÄ‚ñú‚ñå     ‚ñù‚ñÄ‚ñö‚ññ     ‚ñà   ‚ñà ‚ñÑ‚ñÑ‚ñÑ‚ñÄ      ‚ñà   ‚ñà
‚ñê‚ñô‚ñÑ‚ñÑ‚ñÄ      ‚ñê‚ñô‚ñÑ‚ñû‚ñò‚ñà              ‚ñê‚ñå       ‚ñù‚ñö‚ñÑ‚ñü‚ñå    ‚ñó‚ñÑ‚ñÑ‚ñû‚ñò                         ‚ñó‚ñÑ‚ññ
                               ‚ñê‚ñå                                             ‚ñê‚ñå ‚ñê‚ñå
 V: 1.1                                                                        ‚ñù‚ñÄ‚ñú‚ñå
                                                                              ‚ñê‚ñô‚ñÑ‚ñû‚ñò

 1) - Ajustes Iniciais
 2) - Limpeza B√°sica    - Conta Samsung/Samsung Health/Galaxy AI se mant√©m.
 3) - Limpeza moderada  - Para usu√°rios sem uma conta Samsung.
 4) - Limpeza Pesada    - !!! Otimiza√ß√£o m√°xima do sistema !!!
 5) - Sair
EOF

read -r -p $'\n Escolha [1-5]: ' menu

case $menu in
    1) TWEAKS ;;
    2) BASIC ;;
    3) LIGHT ;;
    4) HEAVY ;;
    5) exit 0 ;;
    [a-zA-Z]) echo -e "${RED}\nSomente n√∫meros. \n ${RESET}"; sleep 5 ; exit 1 ;;
    *) echo -e "${RED}\nOp√ß√£o Inv√°lida. \n ${RESET}"; sleep 5 ; exit 1 ;;
esac


done


# ----------------------------------------------------------------------------------------


exit 0

